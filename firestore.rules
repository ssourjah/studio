rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    function isAuth() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function getRoleData(roleId) {
      return get(/databases/$(database)/documents/roles/$(roleId)).data;
    }

    // Check if the authenticated user has a specific permission level for a given service.
    // serviceID: The name of the service/page (e.g., 'tasks', 'userManagement').
    // level: The permission level to check (e.g., 'read', 'create', 'edit', 'delete').
    function hasPermission(serviceID, level) {
      let userData = getUserData();
      if (!('roleId' in userData)) {
        return false;
      }
      let roleData = getRoleData(userData.roleId);
      if (!('permissions' in roleData) || !(serviceID in roleData.permissions) || !(level in roleData.permissions[serviceID])) {
        return false;
      }
      return roleData.permissions[serviceID][level] == true;
    }

    match /users/{userId} {
      allow read: if isAuth() && (request.auth.uid == userId || hasPermission('userManagement', 'read'));
      allow create: if isAuth() && hasPermission('userManagement', 'create');
      allow update: if isAuth() && (request.auth.uid == userId || hasPermission('userManagement', 'edit'));
      allow delete: if isAuth() && hasPermission('userManagement', 'delete');
    }

    match /tasks/{taskId} {
      allow read: if isAuth() && (hasPermission('tasks', 'read') || hasPermission('taskManagement', 'read'));
      allow create: if isAuth() && hasPermission('tasks', 'create');
      allow update: if isAuth() && hasPermission('taskManagement', 'edit');
      allow delete: if isAuth() && hasPermission('taskManagement', 'delete');
    }

    match /roles/{roleId} {
        allow read: if isAuth() && hasPermission('administrator', 'read');
        allow create: if isAuth() && hasPermission('administrator', 'create');
        allow update: if isAuth() && hasPermission('administrator', 'edit');
        allow delete: if isAuth() && hasPermission('administrator', 'delete');
    }

    match /settings/company {
      allow read: if true; // Publicly readable for login page
      allow write: if isAuth() && hasPermission('settings', 'edit');
    }
  }
}