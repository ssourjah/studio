rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isAuth() {
      return request.auth != null;
    }

    // Helper function to check permissions by looking up the user's role
    // and checking the nested permissions map.
    function hasPermission(service, permissionLevel) {
      // Get the user's document from the 'users' collection.
      let userDoc = get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
      // If the user has a roleId, get the corresponding role document.
      if (userDoc.roleId != null) {
        let roleDoc = get(/databases/$(database)/documents/roles/$(userDoc.roleId)).data;
        // Check if the permission exists and is set to true.
        // This is the correct way to access nested map properties.
        return roleDoc.permissions[service][permissionLevel] == true;
      }
      return false;
    }

    match /users/{userId} {
      allow read: if isAuth() && (request.auth.uid == userId || hasPermission('userManagement', 'read'));
      allow create: if isAuth() && hasPermission('userManagement', 'create');
      allow update: if isAuth() && (request.auth.uid == userId || hasPermission('userManagement', 'edit'));
      allow delete: if isAuth() && hasPermission('userManagement', 'delete');
    }

    match /tasks/{taskId} {
      allow read: if isAuth() && (hasPermission('tasks', 'read') || hasPermission('taskManagement', 'read'));
      allow create: if isAuth() && hasPermission('tasks', 'create');
      allow update: if isAuth() && hasPermission('taskManagement', 'edit');
      allow delete: if isAuth() && hasPermission('taskManagement', 'delete');
    }

    match /roles/{roleId} {
      allow read: if isAuth() && hasPermission('administrator', 'read');
      allow create: if isAuth() && hasPermission('administrator', 'create');
      allow update: if isAuth() && hasPermission('administrator', 'edit');
      allow delete: if isAuth() && hasPermission('administrator', 'delete');
    }

    match /settings/company {
      allow read: if isAuth();
      allow update: if isAuth() && hasPermission('settings', 'edit');
    }
  }
}