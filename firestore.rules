
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Helper Functions
    function isAuth() {
      return request.auth != null;
    }

    function getUserData() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data;
    }

    function getRole() {
      let roleId = getUserData().roleId;
      if (roleId == null) {
        return null;
      }
      return get(/databases/$(database)/documents/roles/$(roleId)).data;
    }

    function hasPermission(service, level) {
      let role = getRole();
      return role != null && role.permissions[service][level] == true;
    }

    // Rules for 'users' collection
    match /users/{userId} {
      allow read: if isAuth() && (request.auth.uid == userId || hasPermission('userManagement', 'read'));
      allow create: if isAuth() && hasPermission('userManagement', 'create');
      allow update: if isAuth() && (request.auth.uid == userId || hasPermission('userManagement', 'edit'));
      allow delete: if isAuth() && hasPermission('userManagement', 'delete');
    }

    // Rules for 'tasks' collection
    match /tasks/{taskId} {
      allow read: if isAuth() && (hasPermission('tasks', 'read') || hasPermission('taskManagement', 'read'));
      allow create: if isAuth() && hasPermission('tasks', 'create');
      allow update: if isAuth() && hasPermission('taskManagement', 'edit');
      allow delete: if isAuth() && hasPermission('taskManagement', 'delete');
    }

    // Rules for 'roles' collection
    match /roles/{roleId} {
      allow read: if isAuth() && hasPermission('administrator', 'read');
      allow create: if isAuth() && hasPermission('administrator', 'create');
      allow update: if isAuth() && hasPermission('administrator', 'edit');
      allow delete: if isAuth() && hasPermission('administrator', 'delete');
    }

    // Rules for 'settings' collection
    match /settings/{docId} {
      // Allow anyone to read company settings for login page display
      allow read: if docId == 'company'; 
      // Only authenticated users with 'settings' edit permission can write
      allow write: if isAuth() && hasPermission('settings', 'edit');
    }
  }
}
